const style = document.createElement("style");
style.classList.add("component-start-page");
style.innerHTML = `
@font-face {
    font-family: 'Maplestory Bold';
    src: url('./font/Maplestory Bold.ttf');
    font-weight: normal;
    font-style: normal;
}
@font-face {
    font-family: 'Maplestory Light';
    src: url('./font/Maplestory Light.ttf');
    font-weight: normal;
    font-style: normal;
}

/* ----------------------------------------------
 * Generated by Animista on 2024-6-11 0:9:39
 * Licensed under FreeBSD License.
 * See http://animista.net/license for more info. 
 * w: http://animista.net, t: @cssanimista
 * ---------------------------------------------- */

@-webkit-keyframes heartbeat{from{-webkit-transform:scale(1);transform:scale(1);-webkit-transform-origin:center center;transform-origin:center center;-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}10%{-webkit-transform:scale(.91);transform:scale(.91);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}17%{-webkit-transform:scale(.98);transform:scale(.98);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}33%{-webkit-transform:scale(.87);transform:scale(.87);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}45%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}}@keyframes heartbeat{from{-webkit-transform:scale(1);transform:scale(1);-webkit-transform-origin:center center;transform-origin:center center;-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}10%{-webkit-transform:scale(.91);transform:scale(.91);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}17%{-webkit-transform:scale(.98);transform:scale(.98);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}33%{-webkit-transform:scale(.87);transform:scale(.87);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}45%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}}
.heartbeat{-webkit-animation:heartbeat 1.5s ease-in-out infinite both;animation:heartbeat 1.5s ease-in-out infinite both}

.start-page {
    position: fixed;
    left: 50%;
    top: 50%;
    width: 150%;
    height: 150%;
    transform: translate(-50%, -50%);
    background-color: black;
    transition: all 1000ms;
    opacity: 0;
    z-index: 100;
    pointer-events: none;
}

.start-page div img {
    position: absolute;
    object-fit: cover;
    height: 100%;
    width: 100%;
    left: 50%;
    top: 50%;
    transform: translate( -50%, -50% );
}

.start-page.show {
    width: 100%;
    height: 100%;
    opacity: 1;
    pointer-events: auto;
}

.start-page div {
    position: absolute;
    left: 50%;
    top: 50%;
    width: 100%;
    height: 100%;
    transform: translate(-50%, -50%);
    transition: all 1000ms;
}

.start-page div button {
    position: absolute;
    left: calc( 50% - 171px );
    top: 7.7%;
    width: 342px;
    background-color: #ec7c48;
    font-family: Maplestory Bold;
    font-size: 4rem;
    color: white;
    border: #420012 solid 2px;
    text-shadow: 0px 0px 2px black;
    border-radius: 16px;
    transition: all 250ms;
    cursor: pointer;
}

.start-page div button:hover {
transform: scale( 1.2 );
}
`;



class StartPage extends HTMLElement {

    constructor() {
        super();
    }

    static get observedAttributes() {
        return [ "visible" ];
    }

    attributeChangedCallback() {
        if(this.getAttribute('visible') === "true"){
            this.classList.add( "show" );
            return;
        }

        this.classList.remove( "show" );
    }

    connectedCallback() {
        if( !document.head.querySelector(".component-start-page") ){
            document.head.appendChild( style );
        }

        this.innerHTML =
`
<div>
<img src="./img/page/start.png" />      
<button>Start</button>
</div>
`;

        this.classList.add("start-page");
        this.classList.add("show");

        this.querySelector("button").addEventListener("click", () => {

            const event = new CustomEvent("clickStartButton", {});
            this.dispatchEvent( event );

        });
    }

}

customElements.define("start-page", StartPage);